<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Sanitize|x64">
      <Configuration>Sanitize</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{d9f59ae5-8270-4a72-9177-599efbdc7153}</ProjectGuid>
    <RootNamespace>PlaneteryEnginePreBuildv03</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\vsProperties\FastCompile.props" />
    <Import Project="..\vsProperties\Debug.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\vsProperties\FastCompile.props" />
    <Import Project="..\vsProperties\Debug.props" />
    <Import Project="Asan.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>C:\VulkanSDK\1.2.170.0\Include;$(SolutionDir)sharedInclude;$(IncludePath)</IncludePath>
    <LibraryPath>C:\VulkanSDK\1.2.170.0\Lib;$(SolutionDir)lib;$(SolutionDir)sharedInclude;$(LibraryPath)</LibraryPath>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">
    <IncludePath>C:\VulkanSDK\1.2.170.0\Include;$(SolutionDir)sharedInclude;$(IncludePath)</IncludePath>
    <LibraryPath>C:\VulkanSDK\1.2.170.0\Lib;$(SolutionDir)lib;$(SolutionDir)sharedInclude;$(LibraryPath)</LibraryPath>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>C:\VulkanSDK\1.2.170.0\Include;$(SolutionDir)sharedInclude;$(IncludePath)</IncludePath>
    <LibraryPath>C:\VulkanSDK\1.2.170.0\Lib;$(SolutionDir)lib;$(SolutionDir)sharedInclude;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <UseUnicodeForAssemblerListing>true</UseUnicodeForAssemblerListing>
      <GenerateSourceDependencies>true</GenerateSourceDependencies>
      <EnableModules>true</EnableModules>
      <RemoveUnreferencedCodeData>false</RemoveUnreferencedCodeData>
      <DisableSpecificWarnings>5050</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>VkLayer_utils.lib;vulkan-1.lib;glfw3.lib;freetype.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <Manifest />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <UseUnicodeForAssemblerListing>true</UseUnicodeForAssemblerListing>
      <GenerateSourceDependencies>true</GenerateSourceDependencies>
      <EnableModules>true</EnableModules>
      <RemoveUnreferencedCodeData>false</RemoveUnreferencedCodeData>
      <DisableSpecificWarnings>5050</DisableSpecificWarnings>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>VkLayer_utils.lib;vulkan-1.lib;glfw3.lib;freetype.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Manifest />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
      <UseUnicodeForAssemblerListing>true</UseUnicodeForAssemblerListing>
      <EnableModules>true</EnableModules>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <RemoveUnreferencedCodeData>false</RemoveUnreferencedCodeData>
      <DisableSpecificWarnings>5050</DisableSpecificWarnings>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>VkLayer_utils.lib;vulkan-1.lib;glfw3.lib;freetype.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\sharedInclude\glad\glad.c" />
    <ClCompile Include="Vulkan-Buffer.ixx" />
    <ClCompile Include="Define.ixx" />
    <ClCompile Include="font.cpp" />
    <ClCompile Include="Font.ixx" />
    <ClCompile Include="GL.cpp" />
    <ClCompile Include="GL.ixx" />
    <ClCompile Include="Logger.cpp" />
    <ClCompile Include="Logger.ixx" />
    <ClCompile Include="Main.cpp" />
    <ClCompile Include="StringBox.cpp" />
    <ClCompile Include="StringBox.ixx" />
    <ClCompile Include="TempFix\memory_resource.cpp">
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">MultiThreadedDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">MultiThreadedDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='Release|x64'">MultiThreadedDLL</RuntimeLibrary>
      <BasicRuntimeChecks Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Default</BasicRuntimeChecks>
      <BufferSecurityCheck Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</BufferSecurityCheck>
      <ControlFlowGuard Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</ControlFlowGuard>
      <FunctionLevelLinking Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</FunctionLevelLinking>
      <GuardEHContMetadata Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GuardEHContMetadata>
      <SupportJustMyCode Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</SupportJustMyCode>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Level1</WarningLevel>
      <SDLCheck Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</SDLCheck>
      <Optimization Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">MaxSpeed</Optimization>
      <InlineFunctionExpansion Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Default</InlineFunctionExpansion>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Default</ConformanceMode>
      <EnforceTypeConversionRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</EnforceTypeConversionRules>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdafx.h</PrecompiledHeaderFile>
      <GenerateSourceDependencies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GenerateSourceDependencies>
    </ClCompile>
    <ClCompile Include="ThreadEvents.cpp" />
    <ClCompile Include="ThreadEvents.ixx" />
    <ClCompile Include="ThreadRender.cpp" />
    <ClCompile Include="ThreadRender.ixx" />
    <ClCompile Include="Util.cpp" />
    <ClCompile Include="Util.ixx" />
    <ClCompile Include="Vulkan-Commend.ixx" />
    <ClCompile Include="Vulkan-Descriptor.ixx" />
    <ClCompile Include="Vulkan-Device.ixx" />
    <ClCompile Include="Vulkan-Image.ixx" />
    <ClCompile Include="Vulkan-Pipeline.ixx" />
    <ClCompile Include="Vulkan-Shader.ixx" />
    <ClCompile Include="Vulkan-Sync.ixx" />
    <ClCompile Include="Vulkan-Tick.ixx" />
    <ClCompile Include="Vulkan.cpp" />
    <ClCompile Include="Vulkan.ixx" />
    <ClCompile Include="Vulkan-BufferImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-CommendImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-DescriptorImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-ImageImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-PipelineImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-ShaderImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-SyncImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-DeviceImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-TickImp.cpp">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">CompileAsCppModuleInternalPartition</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CompileAsCppModuleInternalPartition</CompileAs>
    </ClCompile>
    <ClCompile Include="Vulkan-Enum.ixx" />
    <ClCompile Include="Vulkan-Internal.ixx" />
    <ClCompile Include="VulkanNativeCall.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Assert.h" />
    <ClInclude Include="ConsoleFormat.h" />
    <ClCompile Include="GlfwModule.h" />
    <ClCompile Include="GlmModule.h">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</DeploymentContent>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">true</DeploymentContent>
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </ClCompile>
    <ClCompile Include="GladGlfwGlTempModule.h" />
    <ClCompile Include="FreeTypeModule.h" />
    <ClInclude Include="Marco.h" />
    <ClCompile Include="ShelfPackModule.h" />
    <ClInclude Include="TempFix\internal_shared.h" />
    <ClCompile Include="VulkanExtModule.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".clang-format" />
    <None Include="cpp.hint" />
    <ClInclude Include="TempFix\memory_resource">
      <FileType>Document</FileType>
    </ClInclude>
    <None Include="shader\basic.frag">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">glslc.exe --target-env=vulkan1.2 -O -o .%(Filename).spirv %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">SPIR-V Compiler</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.%(Filename).spirv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">None</OutputItemType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">glslc.exe --target-env=vulkan1.2 -O -o .%(Filename).spirv %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">SPIR-V Compiler</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">.%(Filename).spirv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">false</LinkObjects>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">None</OutputItemType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">glslc.exe --target-env=vulkan1.2 -O -o .%(Filename).spirv %(FullPath)</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">SPIR-V Compiler</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.%(Filename).spirv</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release|x64'">None</OutputItemType>
      <TreatOutputAsContent Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</TreatOutputAsContent>
      <TreatOutputAsContent Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">true</TreatOutputAsContent>
      <TreatOutputAsContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</TreatOutputAsContent>
      <RootFolder Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.\cshader</RootFolder>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <RootFolder Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">.\cshader</RootFolder>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Sanitize|x64'">true</BuildInParallel>
      <RootFolder Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.\cshader</RootFolder>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
    </None>
    <None Include="shader\basic.vert">
      <FileType>Document</FileType>
    </None>
    <None Include="shader\point.frag" />
    <None Include="shader\point.vert" />
    <None Include="testUniform.frag" />
    <None Include="testUniform.vert" />
    <None Include="testUniformAndTexture.frag" />
    <None Include="testUniformAndTexture.vert" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>